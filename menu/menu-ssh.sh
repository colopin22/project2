echo 'IyEvYmluL2Jhc2gKZGF0ZUZyb21TZXJ2ZXI9JChjdXJsIC12IC0taW5zZWN1cmUgLS1zaWxlbnQgaHR0cHM6Ly9nb29nbGUuY29tLyAyPiYxIHwgZ3JlcCBEYXRlIHwgc2VkIC1lICdzLzwgRGF0ZTogLy8nKQpiaWppPWBkYXRlICsiJVktJW0tJWQiIC1kICIkZGF0ZUZyb21TZXJ2ZXIiYAojIyMjIyMjIyMjIy0gQ09MT1IgQ09ERSAtIyMjIyMjIyMjIyMjIyMKTkM9IlxlWzBtIgpSRUQ9IlwwMzNbMDszMW0iIAoKQlVSSVEgKCkgewogICAgY3VybCAtc1MgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2NvbG9waW4yMi9pemluL21haW4vaXppbiA+IC9yb290L3RtcAogICAgZGF0YT0oIGBjYXQgL3Jvb3QvdG1wIHwgZ3JlcCAtRSAiXiMjIyAiIHwgYXdrICd7cHJpbnQgJDJ9J2AgKQogICAgZm9yIHVzZXIgaW4gIiR7ZGF0YVtAXX0iCiAgICBkbwogICAgZXhwPSggYGdyZXAgLUUgIl4jIyMgJHVzZXIiICIvcm9vdC90bXAiIHwgYXdrICd7cHJpbnQgJDN9J2AgKQogICAgZDE9KGBkYXRlIC1kICIkZXhwIiArJXNgKQogICAgZDI9KGBkYXRlIC1kICIkYmlqaSIgKyVzYCkKICAgIGV4cDI9JCgoIChkMSAtIGQyKSAvIDg2NDAwICkpCiAgICBpZiBbWyAiJGV4cDIiIC1sZSAiMCIgXV07IHRoZW4KICAgIGVjaG8gJHVzZXIgPiAvZXRjLy4kdXNlci5pbmkKICAgIGVsc2UKICAgIHJtIC1mIC9ldGMvLiR1c2VyLmluaSA+IC9kZXYvbnVsbCAyPiYxCiAgICBmaQogICAgZG9uZQogICAgcm0gLWYgL3Jvb3QvdG1wCn0KCk1ZSVA9JChjdXJsIC1zUyBpcHY0LmljYW5oYXppcC5jb20pCk5hbWU9JChjdXJsIC1zUyBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vY29sb3BpbjIyL2l6aW4vbWFpbi9pemluIHwgZ3JlcCAkTVlJUCB8IGF3ayAne3ByaW50ICQyfScpCmVjaG8gJE5hbWUgPiAvdXNyL2xvY2FsL2V0Yy8uJE5hbWUuaW5pCkNla09uZT0kKGNhdCAvdXNyL2xvY2FsL2V0Yy8uJE5hbWUuaW5pKQoKQmxvbWFuICgpIHsKaWYgWyAtZiAiL2V0Yy8uJE5hbWUuaW5pIiBdOyB0aGVuCkNla1R3bz0kKGNhdCAvZXRjLy4kTmFtZS5pbmkpCiAgICBpZiBbICIkQ2VrT25lIiA9ICIkQ2VrVHdvIiBdOyB0aGVuCiAgICAgICAgcmVzPSJFeHBpcmVkIgogICAgZmkKZWxzZQpyZXM9IlBlcm1pc3Npb24gQWNjZXB0ZWQuLi4iCmZpCn0KClBFUk1JU1NJT04gKCkgewogICAgTVlJUD0kKGN1cmwgLXNTIGlwdjQuaWNhbmhhemlwLmNvbSkKICAgIElaSU49JChjdXJsIC1zUyBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vY29sb3BpbjIyL2l6aW4vbWFpbi9pemluIHwgYXdrICd7cHJpbnQgJDR9JyB8IGdyZXAgJE1ZSVApCiAgICBpZiBbICIkTVlJUCIgPSAiJElaSU4iIF07IHRoZW4KICAgIEJsb21hbgogICAgZWxzZQogICAgcmVzPSJQZXJtaXNzaW9uIERlbmllZCEiCiAgICBmaQogICAgQlVSSVEKfQpyZWQ9J1xlWzE7MzFtJwpncmVlbj0nXGVbMTszMm0nCk5DPSdcZVswbScKZ3JlZW4oKSB7IGVjaG8gLWUgIlxcMDMzWzMyOzFtJHsqfVxcMDMzWzBtIjsgfQpyZWQoKSB7IGVjaG8gLWUgIlxcMDMzWzMxOzFtJHsqfVxcMDMzWzBtIjsgfQpQRVJNSVNTSU9OCmlmIFsgLWYgL2hvbWUvbmVlZHVwZGF0ZSBdOyB0aGVuCnJlZCAiWW91ciBzY3JpcHQgbmVlZCB0byB1cGRhdGUgZmlyc3QgISIKZXhpdCAwCmVsaWYgWyAiJHJlcyIgPSAiUGVybWlzc2lvbiBBY2NlcHRlZC4uLiIgXTsgdGhlbgplY2hvIC1uZQplbHNlCnJlZCAiUGVybWlzc2lvbiBEZW5pZWQhIgpleGl0IDAKZmkKQklCbGFjaz0nXDAzM1sxOzkwbScgICAgICAjIEJsYWNrCkJJUmVkPSdcMDMzWzE7OTFtJyAgICAgICAgIyBSZWQKQklHcmVlbj0nXDAzM1sxOzkybScgICAgICAjIEdyZWVuCkJJWWVsbG93PSdcMDMzWzE7OTNtJyAgICAgIyBZZWxsb3cKQklCbHVlPSdcMDMzWzE7OTRtJyAgICAgICAjIEJsdWUKQklQdXJwbGU9J1wwMzNbMTs5NW0nICAgICAjIFB1cnBsZQpCSUN5YW49J1wwMzNbMTs5Nm0nICAgICAgICMgQ3lhbgpCSVdoaXRlPSdcMDMzWzE7OTdtJyAgICAgICMgV2hpdGUKVVdoaXRlPSdcMDMzWzQ7MzdtJyAgICAgICAjIFdoaXRlCk9uX0lQdXJwbGU9J1wwMzNbMDsxMDVtJyAgIwpPbl9JUmVkPSdcMDMzWzA7MTAxbScKSUJsYWNrPSdcMDMzWzA7OTBtJyAgICAgICAjIEJsYWNrCklSZWQ9J1wwMzNbMDs5MW0nICAgICAgICAgIyBSZWQKSUdyZWVuPSdcMDMzWzA7OTJtJyAgICAgICAjIEdyZWVuCklZZWxsb3c9J1wwMzNbMDs5M20nICAgICAgIyBZZWxsb3cKSUJsdWU9J1wwMzNbMDs5NG0nICAgICAgICAjIEJsdWUKSVB1cnBsZT0nXDAzM1swOzk1bScgICAgICAjIFB1cnBsZQpJQ3lhbj0nXDAzM1swOzk2bScgICAgICAgICMgQ3lhbgpJV2hpdGU9J1wwMzNbMDs5N20nICAgICAgICMgV2hpdGUKTkM9J1xlWzBtJwpncmVlbigpIHsgZWNobyAtZSAiXFwwMzNbMzI7MW0keyp9XFwwMzNbMG0iOyB9CnJlZCgpIHsgZWNobyAtZSAiXFwwMzNbMzE7MW0keyp9XFwwMzNbMG0iOyB9CiMgLy8gRXhwb3J0aW5nIExhbmd1YWdlIHRvIFVURi04CgpleHBvcnQgTEFORz0nZW5fVVMuVVRGLTgnCmV4cG9ydCBMQU5HVUFHRT0nZW5fVVMuVVRGLTgnCgoKIyAvLyBFeHBvcnQgQ29sb3IgJiBJbmZvcm1hdGlvbgpleHBvcnQgUkVEPSdcMDMzWzA7MzFtJwpleHBvcnQgR1JFRU49J1wwMzNbMDszMm0nCmV4cG9ydCBZRUxMT1c9J1wwMzNbMDszM20nCmV4cG9ydCBCTFVFPSdcMDMzWzA7MzRtJwpleHBvcnQgUFVSUExFPSdcMDMzWzA7MzVtJwpleHBvcnQgQ1lBTj0nXDAzM1swOzM2bScKZXhwb3J0IExJR0hUPSdcMDMzWzA7MzdtJwpleHBvcnQgTkM9J1wwMzNbMG0nCgpNWUlQPSQod2dldCAtcU8tIGlwaW5mby5pby9pcCk7CmVjaG8gIkNoZWNraW5nIFZQUyIKCmNsZWFyCmVjaG8gLWUgIiR7Q1lBTn3ilZLilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZUke05DfSIKZWNobyAtZSAiJHtCSVdoaXRlfSAgICAgICAgICAgICAgICDih7EgU1NIIE1FTlUg4oeyICAgICAgICAgICAgICR7TkN9IgplY2hvIC1lICIke0NZQU594pWY4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWbJHtOQ30iCmVjaG8gLWUgIiIKZWNobyAtZSAiJHtDWUFOfeKVkuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVlSR7TkN9IgplY2hvIC1lICIke0JJQ3lhbn1bJHtCSVdoaXRlfTAxJHtCSUN5YW59XSBDcmVhdGUgU1NIICYgT3BlblZQTiBBY2NvdW50ICAgICAgIgplY2hvIC1lICIke0JJQ3lhbn1bJHtCSVdoaXRlfTAyJHtCSUN5YW59XSBUcmlhbCBBY2NvdW50IFNTSCAmIE9wZW5WUE4gICAgICAiCmVjaG8gLWUgIiR7QklDeWFufVske0JJV2hpdGV9MDMke0JJQ3lhbn1dIFJlbmV3IFNTSCAmIE9wZW5WUE4gQWNjb3VudCAgICAgICIKZWNobyAtZSAiJHtCSUN5YW59WyR7QklXaGl0ZX0wNCR7QklDeWFufV0gRGVsZXRlIFNTSCAmIE9wZW5WUE4gQWNjb3VudCAgICAgIgplY2hvIC1lICIke0JJQ3lhbn1bJHtCSVdoaXRlfTA1JHtCSUN5YW59XSBDaGVjayBVc2VyIExvZ2luIFNTSCAmIE9wZW5WUE4gICAgICIKZWNobyAtZSAiJHtCSUN5YW59WyR7QklXaGl0ZX0wNiR7QklDeWFufV0gTGlzdCBNZW1iZXIgU1NIICYgT3BlblZQTiAgICAgIgplY2hvIC1lICIke0JJQ3lhbn1bJHtCSVdoaXRlfTA3JHtCSUN5YW59XSBEZWxldGUgVXNlciBFeHBpcmVkIFNTSCAmIE9wZW5WUE4iCmVjaG8gLWUgIiR7QklDeWFufVske0JJV2hpdGV9MDgke0JJQ3lhbn1dIFNldCB1cCBBdXRva2lsbCBTU0giCmVjaG8gLWUgIiR7QklDeWFufVske0JJV2hpdGV9MDkke0JJQ3lhbn1dIENlayBVc2VycyBXaG8gRG8gTXVsdGkgTG9naW4gU1NIIgplY2hvIC1lICIke0JJQ3lhbn1bJHtCSVdoaXRlfTEwJHtCSUN5YW59XSBsb2NrIHVzZXIgc3NoIgplY2hvIC1lICIke0JJQ3lhbn1bJHtCSVdoaXRlfTExJHtCSUN5YW59XSB1bmxvY2sgdXNlciBzc2giCmVjaG8gLWUgIiR7Q1lBTn3ilZjilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZske05DfSIKZWNobyAtZSAiICAgICAke0JJWWVsbG93fVByZXNzIHggb3IgWyBDdHJsK0MgXSDigKIgVG8tJHtCSVdoaXRlfUV4aXQke05DfSIKZWNobyAiIgpyZWFkIC1wICIgU2VsZWN0IG1lbnUgOiAgIiAgb3B0CmVjaG8gLWUgIiIKY2FzZSAkb3B0IGluCjEpIGNsZWFyIDsgdXNlcm5ldyA7IGV4aXQgOzsKMikgY2xlYXIgOyB0cmlhbCA7IGV4aXQgOzsKMykgY2xlYXIgOyByZW5ldyA7IGV4aXQgOzsKNCkgY2xlYXIgOyBoYXB1cyA7IGV4aXQgOzsKNSkgY2xlYXIgOyBjZWsgOyBleGl0IDs7CjYpIGNsZWFyIDsgbWVtYmVyIDsgZXhpdCA7Owo3KSBjbGVhciA7IGRlbGV0ZSA7IGV4aXQgOzsKOCkgY2xlYXIgOyBhdXRva2lsbCA7IGV4aXQgOzsKOSkgY2xlYXIgOyBjZWtsaW0gOyBleGl0IDs7CjEwKSBjbGVhciA7IHVzZXItbG9jayA7IGV4aXQgOzsKMTEpIGNsZWFyIDsgdXNlci11bmxvY2sgOyBleGl0IDs7CjApIGNsZWFyIDsgbWVudSA7IGV4aXQgOzsKeCkgZXhpdCA7OwoqKSBlY2hvICJBbmRhIHNhbGFoIHRla2FuICIgOyBzbGVlcCAxIDsgbWVudS1zc2ggOzsKZXNhYwo=' | base64 -d | sh
